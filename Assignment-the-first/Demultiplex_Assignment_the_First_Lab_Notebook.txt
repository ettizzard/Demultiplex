1) Entered interactive session for initial data exploration
    
    $ srun -A bgmp -p bgmp -c2 --pty bash

    $ zcat /projects/bgmp/shared/2017_sequencing/1294_S1_L008_R1_001.fastq.gz | head -4
        @K00337:83:HJKJNBBXX:8:1101:1265:1191 1:N:0:1
        GNCTGGCATTCCCAGAGACATCAGTACCCAGTTGGTTCAGACAGTTCCTCTATTGGTTGACAAGGTCTTCATTTCTAGTGATATCAACACGGTGTCTACAA
        +
        A#A-<FJJJ<JJJJJJJJJJJJJJJJJFJJJJFFJJFJJJAJJJJ-AJJJJJJJFFJJJJJJFFA-7<AJJJFFAJJJJJF<F--JJJJJJF-A-F7JJJJ

    $ zcat /projects/bgmp/shared/2017_sequencing/1294_S1_L008_R4_001.fastq.gz | head -4
        @K00337:83:HJKJNBBXX:8:1101:1265:1191 4:N:0:1
        NTTTTGATTTACCTTTCAGCCAATGAGAAGGCCGTTCATGCAGACTTTTTTAATGATTTTGAAGACCTTTTTGATGATGATGATGTCCAGTGAGGCCTCCC
        +
        #AAFAFJJ-----F---7-<FA-F<AFFA-JJJ77<FJFJFJJJJJJJJJJAFJFFAJJJJJJJJFJF7-AFFJJ7F7JFJJFJ7FFF--A<A7<-A-7--

    $ zcat /projects/bgmp/shared/2017_sequencing/1294_S1_L008_R2_001.fastq.gz | head -4
        @K00337:83:HJKJNBBXX:8:1101:1265:1191 2:N:0:1
        NCTTCGAC
        +
        #AA<FJJJ

    $ zcat /projects/bgmp/shared/2017_sequencing/1294_S1_L008_R3_001.fastq.gz | head -4
        @K00337:83:HJKJNBBXX:8:1101:1265:1191 3:N:0:1
        NTCGAAGA
        +
        #AAAAJJF
    
    From this, we know that biological sequence lines are of length 101 and index sequences are of length 8.

2) Wrote script "perbaseseqsdistribution.py" to plot per-base distribution of quality scores
###START OF SCRIPT###
#!/usr/bin/env python

import bioinfo
import matplotlib.pyplot as plt
import gzip
import argparse

def get_args():
    parser = argparse.ArgumentParser(description="Setting up fastq and read length arguments")
    parser.add_argument("-f", help="input fastq file", type=str)
    parser.add_argument("-l", help="sequence length", type=int)
    parser.add_argument("-r", help="read label", type=str)
    return parser.parse_args()
args = get_args()

read = []

for i in range(args.l):
    read.append(0.0)

with gzip.open(args.f, "rt") as fq:
    for line_num, line in enumerate(fq):
        line = line.strip()
        if line_num % 4 == 3:
            for base_pos, base in enumerate(line):
                read[base_pos] += bioinfo.convert_phred(base)
                
#calculate and print mean value at each base position
for index, value in enumerate(read):
    read[index] = value / ((line_num + 1) / 4)
    print(f"{index} {read[index]}")

filename = args.f.split("/")[-1].split(".")[0]

plt.title("Read"+args.r+" Per Base Average Quality Score Distribution")
plt.scatter(range(args.l), read)
plt.xlabel("Base Position")
plt.ylabel("Quality Score")
plt.savefig(filename+"_distributionplot.png")
###EOF###

3) Wrote 4 separate sbatch scripts so I could run them simultaneously. Each script is identical save for the corresponding read number and file name.
###START OF SCRIPT###
#!/bin/bash

#SBATCH --partition=bgmp        ### Partition (like a queue in PBS)
#SBATCH --job-name=r1plot     ### Job Name
#SBATCH --output=r1plot.out        ### File in which to store job output
#SBATCH --error=r1plot.err          ### File in which to store job error messages
#SBATCH --time=0-08:00:00       ### Wall clock time limit in Days-HH:MM:SS
#SBATCH --nodes=1               ### Number of nodes needed for the job
#SBATCH --cpus-per-task=8
#SBATCH --account=bgmp      ### Account used for job submission
#SBATCH --mail-type=ALL
#SBATCH --mail-user=tizzard@uoregon.edu
 
set -e

/usr/bin/time -v ./perbaseqsdistributions.py -f /projects/bgmp/shared/2017_sequencing/1294_S1_L008_R1_001.fastq.gz -l 101 -r 1
###EOF###

5) Determined how many indices have undetermined base calls.
    $ zcat /projects/bgmp/shared/2017_sequencing/1294_S1_L008_R2_001.fastq.gz | awk 'NR % 4 == 2' | grep "N" | wc -l
        3976613
    
    $ zcat /projects/bgmp/shared/2017_sequencing/1294_S1_L008_R3_001.fastq.gz | awk 'NR % 4 == 2' | grep "N" | wc -l
        3328051
    
    $ zcat /projects/bgmp/shared/2017_sequencing/1294_S1_L008_R2_001.fastq.gz /projects/bgmp/shared/2017_sequencing/1294_S1_L008_R3_001.fastq.gz | awk 'NR % 4 == 2' | grep "N" | wc -l
        7304664
    


3?) Make unit tests:
    R1_Unit_Test.fq

    R2_Unit_Test.fq
    #First fastq record will be a high-quality index read
    $ zcat 1294_S1_L008_R2_001.fastq.gz | head -150000

    R3_Unit_Test.fq
    #First fastq record will be a high-quality index read
    $ zcat 1294_S1_L008_R3_001.fastq.gz | head -150000
    